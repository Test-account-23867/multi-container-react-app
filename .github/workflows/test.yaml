name: deploy-stage
on:
  push:
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker build -t react-test -f ./client/Dockerfile.dev ./client
      - run: docker run -e CI=true react-test npm run test 
        # -e CI=true stops it after test is done and dose not wait for inputs
      
      # building the containers 
      - run: docker build -t abc122/multi-container:client ./client
      - run: docker build -t abc122/multi-container:nginx ./nginx
      - run: docker build -t abc122/multi-container:server ./server
      - run: docker build -t abc122/multi-container:worker ./worker

      #login to docker hub
      - name: DockerHub Login
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin 
      # push to docker hub
      - run: docker push abc122/multi-container:client
      - run: docker push abc122/multi-container:nginx
      - run: docker push abc122/multi-container:server
      - run: docker push abc122/multi-container:worker

      - name: make a ZIP file
        run: zip compose-file.zip docker-compose.yaml

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          application_name: multi-container-fib
          environment_name: Multi-container-fib-env
          existing_bucket_name: elasticbeanstalk-ap-south-1-241533115304
          region: ap-south-1
          version_label: ${{ github.sha }}
          deployment_package: compose-file.zip
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }} 
